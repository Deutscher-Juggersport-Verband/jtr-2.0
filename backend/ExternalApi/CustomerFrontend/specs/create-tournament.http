### Create a tournament
### Execute ExternalApi/specs/requests/000-Authorization.http before using this!
POST https://{{host}}/api/customer-frontend/create-tournament
Content-Type: application/json
Authorization: Bearer {{jwtToken}}

{
  "additionalInformation": "test",
  "name": "test",
  "description": "test desc",
  "startDate": "2021-12-31",
  "endDate": "2021-12-31",
  "startArrivalDate": "2021-12-31",
  "endArrivalDate": "2021-12-31",
  "address": "test address",
  "possibleSpace": 6,
  "registrationProcedureType": "first_come",
  "registrationProcedureText": "test text",
  "registrationStartDate": "2021-12-31",
  "registrationCosts": 1,
  "registrationCostsType": "per_team",
  "depositCosts": 2,
  "depositCostsType": "per_person",
  "accommodationCosts": 3,
  "accommodationCostsType": "per_team",
  "guestCosts": 4,
  "guestCostsType": "per_person",
  "costsText": "test costs",
  "deadlines": "test deadlines",
  "schedule": "test schedule",
  "contacts": [
    "test1",
    "test2"
  ],
  "accommodationType": "hotel",
  "accommodationLocation": "test location",
  "location": "keine angabe",
  "foodMorning": "no",
  "foodNoon": "no",
  "foodEvening": "no",
  "foodGastro": "no",
  "tournamentSystemText": "test text",
  "tournamentSystemUrl": "test ",
  "pompfCheckText": "test ",
  "pompfCheckUrl": "test ",
  "houseRulesText": "test ",
  "houseRulesUrl": "test ",
  "studdedShoesAllowed": false,
  "cleatsShoesAllowed": false,
  "camShoesAllowed": false,
  "barefootAllowed": false,
  "shoesText": "schuhe mitbringen",
  "registrationProcedureUrl": "test"
}

> {%
    client.test("It should return a successful status code", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
