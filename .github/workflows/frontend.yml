name: frontend

on: [ push ]

permissions:
  actions: read
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build frontend image
        run: docker build -t frontend ./frontend

      - name: Save frontend image
        run: docker save -o frontend.tar frontend

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: frontend.tar

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load frontend image
        run: docker load -i frontend.tar

      - name: Run Docker Compose
        run: docker-compose up -d frontend

      - name: Run tests
        run: |
          set -e

          docker exec -w /app frontend npm i
          docker exec -w /app frontend nx run-many --target=test --all

  code-style:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load frontend image
        run: docker load -i frontend.tar

      - name: Run Docker Compose
        run: docker-compose up -d frontend

      - name: Run code style checks on all projects
        run: |
          set -e

          docker exec -w /app frontend npm i
          docker exec -w /app frontend nx run-many --target=lint --all
